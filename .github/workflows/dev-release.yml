name: Dev Release with Private Submodules

on:
  workflow_dispatch:    # Manuelle Ausf√ºhrung via GitHub UI m√∂glich
  push:
    branches:
      - dev

jobs:
  dev_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository without submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Patch .gitmodules URLs with token
        run: |
          echo "üîß Patching .gitmodules submodule URLs with token"
          git config -f .gitmodules --get-regexp url | while read key url; do
            new_url=${url/https:\/\/github.com/https:\/\/x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com}
            git config -f .gitmodules "$key" "$new_url"
            echo "Patched $key to $new_url"
          done
          git submodule sync --recursive

      - name: Init and update all submodules recursively
        run: |
          echo "üì¶ Initializing and updating all submodules recursively"
          git submodule update --init --recursive --depth=1

      - name: Checkout 'dev' branch in all submodules
        run: |
          echo "üîÑ Switching all submodules to 'dev' branch if exists"
          git submodule foreach --recursive '
            echo "Entering submodule: $name"
            git fetch origin dev || echo "Fetch failed for $name"
            if git show-ref --verify --quiet refs/remotes/origin/dev; then
              git checkout dev
              git pull origin dev
              echo "‚úÖ $name switched to dev"
            else
              echo "‚ö†Ô∏è $name has no dev branch"
            fi
          '

      - name: Show submodule directories and contents
        run: |
          echo "üìÅ Root repo files:"
          ls -la
          for dir in $(git config -f .gitmodules --name-only --get-regexp path | sed 's/\.path//'); do
            echo "Contents of submodule '$dir':"
            ls -la $dir || echo "$dir directory missing"
          done

name: DEV Release Automation

on:
  push:
    branches:
      - alpha
  workflow_dispatch:

jobs:
  manage-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository with Submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Switch submodules to 'dev' branch
        run: |
          git submodule foreach '
            set -e
            echo "Switching $name to dev branch"
            if git fetch origin dev && git show-ref --verify --quiet refs/remotes/origin/dev; then
              git checkout dev
              git pull origin dev
            else
              echo "Branch dev not found in $name"
            fi
          '

      - name: Commit updated submodule references
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "Update submodules to dev branches"
          else
            echo "No changes to commit"
          fi

      - name: Delete existing DEV release
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          if gh release view DEV &>/dev/null; then
            echo "Deleting existing DEV release..."
            gh release delete DEV --yes
          else
            echo "No existing DEV release found."
          fi

      - name: Flatten submodules into main repo
        run: |
          git submodule foreach '
            cd $toplevel &&
            rm -rf $name &&
            cp -r $sm_path $name
          '

      - name: Create ZIP with full source including submodules
        run: |
          timestamp=$(TZ=Europe/Vienna date +"%Y%m%d_%H%M%S")
          echo "Using timestamp: $timestamp"
          echo "$timestamp" > release_timestamp.txt  # Save it for next step
          zip -r ddpc_alpha.zip . -x '*.git*' '*.github*' '*.vscode*' '*node_modules*'

      - name: Create new DEV release and upload ZIP
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          timestamp=$(cat release_timestamp.txt)
          release_name="alpha_${timestamp}"
          echo "Creating release: $release_name"
          gh release create DEV ddpc_alpha.zip \
            --title "$release_name" \
            --notes "Automatisch generiertes DEV Release vom $timestamp"

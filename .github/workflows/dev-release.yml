name: DEV Release Automation

on:
  push:
    branches:
      - alpha
  workflow_dispatch:

jobs:
  manage-release:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Repository with Submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: üìã Show All Submodules
        run: |
          echo "üîç Listing all submodules:"
          git config --file .gitmodules --get-regexp path | while read -r key path; do
            url=$(git config --file .gitmodules --get "${key/path/url}")
            echo " - $path ($url)"
          done

      - name: üîÑ Switch all submodules to 'dev' branch (recursive)
        run: |
          git submodule update --init --recursive

          git submodule foreach --recursive '
            echo "üîß Updating submodule: $name"
            git fetch origin
            if git rev-parse --verify origin/dev >/dev/null 2>&1; then
              git checkout dev
              git pull origin dev
              echo "‚úÖ Checked out dev branch for $name"
            else
              echo "‚ö†Ô∏è Branch dev not found for submodule $name"
            fi
          '

      - name: üíæ Commit updated submodule references (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "Update submodules to dev branches"
            echo "‚úÖ Changes committed."
          else
            echo "‚ÑπÔ∏è No changes to commit."
          fi

      - name: üóëÔ∏è Delete existing DEV release (if exists)
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          if gh release view DEV &>/dev/null; then
            echo "üßπ Deleting existing DEV release..."
            gh release delete DEV --yes
          else
            echo "‚ÑπÔ∏è No ex
